/**
 * Mist APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, dict, lazy, object, optional, Schema } from '../schema';
import {
  NetworkDestinationNatProperty,
  networkDestinationNatPropertySchema,
} from './networkDestinationNatProperty';
import {
  NetworkStaticNatProperty,
  networkStaticNatPropertySchema,
} from './networkStaticNatProperty';

/** whether this network has direct internet access */
export interface NetworkInternetAccess {
  createSimpleServicePolicy?: boolean;
  /** Property key may be an IP/Port (i.e. "63.16.0.3:443"), or a port (i.e. ":2222") */
  destinationNat?: Record<string, NetworkDestinationNatProperty>;
  enabled?: boolean;
  /** by default, all access is allowed, to only allow certain traffic, make `restricted`=`true` and define service_policies */
  restricted?: boolean;
  /** Property key may be an IP Address (i.e. "172.16.0.1"), and IP Address and Port (i.e. "172.16.0.1:8443") or a CIDR (i.e. "172.16.0.12/20") */
  staticNat?: Record<string, NetworkStaticNatProperty>;
}

export const networkInternetAccessSchema: Schema<NetworkInternetAccess> = object(
  {
    createSimpleServicePolicy: [
      'create_simple_service_policy',
      optional(boolean()),
    ],
    destinationNat: [
      'destination_nat',
      optional(dict(lazy(() => networkDestinationNatPropertySchema))),
    ],
    enabled: ['enabled', optional(boolean())],
    restricted: ['restricted', optional(boolean())],
    staticNat: [
      'static_nat',
      optional(dict(lazy(() => networkStaticNatPropertySchema))),
    ],
  }
);
