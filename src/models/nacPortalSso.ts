/**
 * Mist APILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import {
  NacPortalSsoRoleMatching,
  nacPortalSsoRoleMatchingSchema,
} from './nacPortalSsoRoleMatching';

export interface NacPortalSso {
  idpCert?: string;
  idpSignAlgo?: string;
  idpSsoUrl?: string;
  issuer?: string;
  nameidFormat?: string;
  ssoRoleMatching?: NacPortalSsoRoleMatching[];
  /** if it's desired to inject a role into Cert's Subject (so it can be used later on in policy) */
  useSsoRoleForCert?: boolean;
}

export const nacPortalSsoSchema: Schema<NacPortalSso> = object({
  idpCert: ['idp_cert', optional(string())],
  idpSignAlgo: ['idp_sign_algo', optional(string())],
  idpSsoUrl: ['idp_sso_url', optional(string())],
  issuer: ['issuer', optional(string())],
  nameidFormat: ['nameid_format', optional(string())],
  ssoRoleMatching: [
    'sso_role_matching',
    optional(array(lazy(() => nacPortalSsoRoleMatchingSchema))),
  ],
  useSsoRoleForCert: ['use_sso_role_for_cert', optional(boolean())],
});
